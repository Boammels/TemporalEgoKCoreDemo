{"ast":null,"code":"var _jsxFileName = \"/home/TemporalEgoKCoreDemo/frontend/src/App.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport Graph from './pages/Graph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text\",\n        children: \"Welcome!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Start, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"try\",\n        element: /*#__PURE__*/_jsxDEV(Graph, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"echo\",\n        element: /*#__PURE__*/_jsxDEV(Echo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nconst Echo = () => {\n  _s();\n\n  const [string, setString] = React.useState('');\n  const [success, setSuccess] = React.useState(false);\n  React.useState(async () => {\n    const response = await fetch('http://127.0.0.1:5000/echo/post/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const result = await response.json();\n\n    if (response.status === 200) {\n      setString(result.echo);\n      setSuccess(true);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: string\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Echo, \"K+81kUxYXjdr5oTegjnjhtpDPFQ=\");\n\n_c2 = Echo;\n\nconst Start = () => {\n  _s2();\n\n  const [type, setType] = React.useState('name');\n  const [name, setName] = React.useState('');\n  const [id, setId] = React.useState('');\n\n  const submit = () => {\n    let key = '';\n\n    if (type === 'name') {\n      key = name;\n    } else {\n      key = id;\n    }\n\n    if (key === '') {\n      alert('Alert: ' + type + ' cannot be empty!');\n    } else {\n      console.log(key);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typeSelect\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"checkbox\",\n        checked: type === 'id',\n        style: {\n          display: 'inline'\n        },\n        onChange: () => {\n          if (type === 'name') {\n            setType('id');\n          } else {\n            setType('name');\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        children: \"Search by ID | \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"checkbox\",\n        checked: type === 'name',\n        style: {\n          display: 'inline'\n        },\n        onChange: () => {\n          if (type === 'name') {\n            setType('id');\n          } else {\n            setType('name');\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        children: \"Search by Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), type === 'name' && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      className: \"Input\",\n      placeholder: \"Name of the researcher\",\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }, this), type === 'id' && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: id,\n      className: \"Input\",\n      placeholder: \"ID of the researcher\",\n      onChange: e => setId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => submit(),\n      children: \"Let's Start!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Start, \"g4XJJn/49ESQIEnniwwFV55wXlA=\");\n\n_c3 = Start;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Echo\");\n$RefreshReg$(_c3, \"Start\");","map":{"version":3,"names":["React","BrowserRouter","Routes","Route","Graph","App","Echo","string","setString","useState","success","setSuccess","response","fetch","method","headers","result","json","status","echo","Start","type","setType","name","setName","id","setId","submit","key","alert","console","log","display","e","target","value"],"sources":["/home/TemporalEgoKCoreDemo/frontend/src/App.jsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport Graph from './pages/Graph' \r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <header className='header'>\r\n        <p className='text'>Welcome!</p>\r\n      </header>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Start />} />\r\n        <Route path=\"try\" element={<Graph />} />\r\n        <Route path=\"echo\" element={<Echo />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nconst Echo = () => {\r\n  const [string, setString] = React.useState('')\r\n  const [success, setSuccess] = React.useState(false);\r\n  React.useState(\r\n    async () => {\r\n      const response = await fetch('http://127.0.0.1:5000/echo/post/', {\r\n        method: 'GET',\r\n        headers : { \r\n          'Content-Type': 'application/json',\r\n        }\r\n      });\r\n      const result = await response.json();\r\n      if(response.status === 200) {\r\n        setString(result.echo);\r\n        setSuccess(true);\r\n      }\r\n    }\r\n  )\r\n  return (\r\n    <>\r\n    {success && <h1>{string}</h1>}\r\n    </>\r\n  )\r\n}\r\n\r\nconst Start = () => {\r\n  const [type, setType] = React.useState('name');\r\n  const [name, setName] = React.useState('');\r\n  const [id, setId] = React.useState('');\r\n\r\n  const submit = () => {\r\n    let key = '';\r\n    if (type === 'name') {\r\n      key = name;\r\n    } else {\r\n      key = id;\r\n    }\r\n    if (key === '') {\r\n      alert('Alert: ' + type + ' cannot be empty!');\r\n    } else {\r\n      console.log(key);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='main'>\r\n      <div className='typeSelect'> \r\n        <input\r\n          type='checkbox'\r\n          className='checkbox'\r\n          checked={type==='id'}\r\n          style={{ display:'inline' }}\r\n          onChange={() => {\r\n            if (type === 'name') {\r\n              setType('id');\r\n            } else {\r\n              setType('name')\r\n            }\r\n          }}\r\n        />\r\n        <span className='text'>Search by ID | </span>\r\n        <input\r\n          type='checkbox'\r\n          className='checkbox'\r\n          checked={type==='name'}\r\n          style={{ display:'inline' }}\r\n          onChange={() => {\r\n            if (type === 'name') {\r\n              setType('id');\r\n            } else {\r\n              setType('name')\r\n            }\r\n          }}\r\n        />\r\n        <span className='text'>Search by Name</span>\r\n      </div>\r\n      {type==='name' && <input\r\n        type='text'\r\n        value={name}\r\n        className='Input'\r\n        placeholder='Name of the researcher'\r\n        onChange={e => setName(e.target.value)}\r\n      />}\r\n      {type==='id' && <input\r\n        type='text'\r\n        value={id}\r\n        className='Input'\r\n        placeholder='ID of the researcher'\r\n        onChange={e => setId(e.target.value)}\r\n      />}\r\n      <button\r\n        onClick={() => submit()}\r\n      >Let's Start!</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}