{"ast":null,"code":"var _jsxFileName = \"/home/TemporalEgoKCoreDemo/frontend/src/pages/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [type, setType] = React.useState('name');\n  const [name, setName] = React.useState('');\n  const [id, setId] = React.useState('');\n  const [start, setStart] = React.useState(1938);\n  const [end, setEnd] = React.useState(2023);\n  const [k, setK] = React.useState(1);\n  const navigate = useNavigate();\n\n  const submit = () => {\n    let key = '';\n\n    if (type === 'name') {\n      key = name;\n    } else {\n      key = id;\n    }\n\n    console.log(start);\n    console.log(end);\n\n    if (key === '') {\n      alert('Alert: ' + type + ' cannot be empty!');\n    } else if (isNaN(parseInt(start)) || isNaN(parseInt(end))) {\n      alert('year is not number');\n    } else if (parseInt(start) < 1938 || parseInt(end) > 2023) {\n      alert('year query out of bound');\n    } else if (parseInt(start) > parseInt(end)) {\n      alert('start year should earlier or equal to end year');\n    } else {\n      navigate('/' + type + '/' + key + '/' + parseInt(start) + '/' + parseInt(end) + '/' + k);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"yearInput\",\n      children: [\"From: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"year\",\n        value: start,\n        min: 1938,\n        max: 2023,\n        onChange: e => setStart(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), \" To: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"year\",\n        value: end,\n        min: 1938,\n        max: 2023,\n        onChange: e => setEnd(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"minmax\",\n        children: \"(min: 1938, max: 2023)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typeSelect\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"checkbox\",\n        checked: type === 'id',\n        style: {\n          display: 'inline'\n        },\n        onChange: () => {\n          if (type === 'name') {\n            setType('id');\n          } else {\n            setType('name');\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        children: \"Search by ID | \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"checkbox\",\n        checked: type === 'name',\n        style: {\n          display: 'inline'\n        },\n        onChange: () => {\n          if (type === 'name') {\n            setType('id');\n          } else {\n            setType('name');\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        children: \"Search by Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), type === 'name' && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        className: \"Input\",\n        placeholder: \"Name of the researcher\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 27\n      }, this), type === 'id' && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: id,\n        className: \"Input\",\n        placeholder: \"ID of the researcher\",\n        onChange: e => setId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"k-value\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-sml\",\n        onClick: () => {\n          k > 0 ? setK(k - 1) : setK(k);\n        },\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" k = \", k, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-sml\",\n        onClick: () => {\n          k < 20 ? setK(k + 1) : setK(k);\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Submit\",\n      onClick: () => submit(),\n      children: \"Let's Start!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"p/Vl1Kgel1I/rBxw7N6xz9yAvNc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useNavigate","Search","type","setType","useState","name","setName","id","setId","start","setStart","end","setEnd","k","setK","navigate","submit","key","console","log","alert","isNaN","parseInt","e","target","value","display"],"sources":["/home/TemporalEgoKCoreDemo/frontend/src/pages/Search.jsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './search.css';\n\nconst Search = () => {\n  const [type, setType] = React.useState('name');\n  const [name, setName] = React.useState('');\n  const [id, setId] = React.useState('');\n  const [start, setStart] = React.useState(1938)\n  const [end, setEnd] = React.useState(2023)\n  const [k, setK] = React.useState(1)\n  const navigate = useNavigate()\n\n  const submit = () => {\n    let key = '';\n    if (type === 'name') {\n      key = name;\n    } else {\n      key = id;\n    }\n    console.log(start)\n    console.log(end)\n    if (key === '') {\n      alert('Alert: ' + type + ' cannot be empty!');\n    } else if (isNaN(parseInt(start)) || isNaN(parseInt(end))) {\n      alert('year is not number')\n    } else if (parseInt(start) < 1938 || parseInt(end) > 2023) {\n      alert('year query out of bound')\n    } else if (parseInt(start) > parseInt(end)) {\n      alert('start year should earlier or equal to end year')\n    } else {\n      navigate('/'+type+'/'+key+'/'+parseInt(start)+'/'+parseInt(end)+'/'+k)\n    }\n  }\n\n  return (\n    <div className='main'>\n      <div className='yearInput'>\n        From: <input\n          type='number'\n          className='year'\n          value={start}\n          min={1938}\n          max={2023}\n          onChange={e => setStart(e.target.value)}\n        /> To: <input\n          type='number'\n          className='year'\n          value={end}\n          min={1938}\n          max={2023}\n          onChange={e => setEnd(e.target.value)}\n        />\n        <p className='minmax'>(min: 1938, max: 2023)</p>\n      </div>\n      <div className='typeSelect'> \n        <input\n          type='checkbox'\n          className='checkbox'\n          checked={type==='id'}\n          style={{ display:'inline' }}\n          onChange={() => {\n            if (type === 'name') {\n              setType('id');\n            } else {\n              setType('name')\n            }\n          }}\n        />\n        <span className='text'>Search by ID | </span>\n        <input\n          type='checkbox'\n          className='checkbox'\n          checked={type==='name'}\n          style={{ display:'inline' }}\n          onChange={() => {\n            if (type === 'name') {\n              setType('id');\n            } else {\n              setType('name')\n            }\n          }}\n        />\n        <span className='text'>Search by Name</span>\n        {type==='name' && <input\n          type='text'\n          value={name}\n          className='Input'\n          placeholder='Name of the researcher'\n          onChange={e => setName(e.target.value)}\n        />}\n        {type==='id' && <input\n          type='number'\n          value={id}\n          className='Input'\n          placeholder='ID of the researcher'\n          onChange={e => setId(e.target.value)}\n        />}\n      </div>\n      <div className='k-value'>\n        <button\n          className='btn-sml'\n          onClick={() => {k > 0 ? setK(k-1) : setK(k)}}\n        >-</button>\n        <span> k = {k} </span>\n        <button\n          className='btn-sml'\n          onClick={() => {k < 20 ? setK(k+1) : setK(k)}}\n        >+</button>\n      </div>\n      <button\n        className='Submit'\n        onClick={() => submit()}\n      >Let's Start!</button>\n    </div>\n  )\n}\n\nexport default Search"],"mappings":"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"},"metadata":{},"sourceType":"module"}