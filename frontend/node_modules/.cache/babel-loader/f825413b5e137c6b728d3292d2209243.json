{"ast":null,"code":"var _jsxFileName = \"/home/TemporalEgoKCoreDemo/frontend/src/pages/Graph.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport '../App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Graph = () => {\n  _s();\n\n  const [success, setSuccess] = React.useState(false);\n  const [elements, setElement] = React.useState([]);\n  const id = useParams().id;\n  const start = parseInt(useParams().start);\n  const end = parseInt(useParams().end);\n  const k = parseInt(useParams().k);\n  const navigate = useNavigate();\n  React.useState(async () => {\n    axios.get('http://127.0.0.1:5000/id/', {\n      params: {\n        'id': id,\n        'start': start,\n        'end': end,\n        'k': k\n      }\n    }).then(_ref => {\n      let {\n        data\n      } = _ref;\n      setElement(data.elements);\n      setSuccess(true);\n    }).catch(err => {\n      alert(err);\n      navigate('/');\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success && /*#__PURE__*/_jsxDEV(CytoscapeComponent, {\n      elements: elements,\n      style: {\n        width: '100vw',\n        height: 'calc(100vh - 50px)'\n      },\n      stylesheet: [{\n        selector: 'node',\n        style: {\n          width: 20,\n          height: 20,\n          color: 'black',\n          label: 'data(label)'\n        }\n      }, {\n        selector: 'edge',\n        style: {\n          width: 1,\n          color: '#123333'\n        }\n      }],\n      layout: {\n        name: 'circle'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Graph, \"BrSKH79kg15Ah2DVOw8o7tYOG+k=\", false, function () {\n  return [useParams, useParams, useParams, useParams, useNavigate];\n});\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","CytoscapeComponent","useNavigate","useParams","axios","Graph","success","setSuccess","useState","elements","setElement","id","start","parseInt","end","k","navigate","get","params","then","data","catch","err","alert","width","height","selector","style","color","label","name"],"sources":["/home/TemporalEgoKCoreDemo/frontend/src/pages/Graph.jsx"],"sourcesContent":["import React from 'react';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport '../App.css';\nimport axios from 'axios';\n\nconst Graph = () => {\n  const [success, setSuccess] = React.useState(false);\n  const [elements, setElement] = React.useState([]);\n  const id = useParams().id;\n  const start = parseInt(useParams().start);\n  const end = parseInt(useParams().end);\n  const k = parseInt(useParams().k);\n  const navigate = useNavigate();\n\n  React.useState(\n    async () => {\n      axios.get('http://127.0.0.1:5000/id/',\n        { \n          params : {\n            'id': id,\n            'start': start,\n            'end': end,\n            'k': k\n          }\n        }).then(({ data }) => {\n        setElement(data.elements)\n        setSuccess(true)\n      })\n      .catch((err) => {\n        alert(err);\n        navigate('/');\n      });\n    }\n  )\n  \n  return <>\n    {success && <CytoscapeComponent\n      elements={elements}\n      style={ { width: '100vw', height: 'calc(100vh - 50px)'}}\n      stylesheet={[\n        {\n          selector: 'node',\n          style: {\n            width: 20,\n            height: 20,\n            color: 'black',\n            label: 'data(label)'\n          }\n        },\n        {\n          selector: 'edge',\n          style: {\n            width: 1,\n            color: '#123333'\n          }\n        }\n      ]}\n      layout={{\n        name:'circle'\n      }}\n    />}\n  </>\n}\n\nexport default Graph;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,mBAA/B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,KAAK,CAACQ,QAAN,CAAe,KAAf,CAA9B;EACA,MAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA/B;EACA,MAAMG,EAAE,GAAGR,SAAS,GAAGQ,EAAvB;EACA,MAAMC,KAAK,GAAGC,QAAQ,CAACV,SAAS,GAAGS,KAAb,CAAtB;EACA,MAAME,GAAG,GAAGD,QAAQ,CAACV,SAAS,GAAGW,GAAb,CAApB;EACA,MAAMC,CAAC,GAAGF,QAAQ,CAACV,SAAS,GAAGY,CAAb,CAAlB;EACA,MAAMC,QAAQ,GAAGd,WAAW,EAA5B;EAEAF,KAAK,CAACQ,QAAN,CACE,YAAY;IACVJ,KAAK,CAACa,GAAN,CAAU,2BAAV,EACE;MACEC,MAAM,EAAG;QACP,MAAMP,EADC;QAEP,SAASC,KAFF;QAGP,OAAOE,GAHA;QAIP,KAAKC;MAJE;IADX,CADF,EAQKI,IARL,CAQU,QAAc;MAAA,IAAb;QAAEC;MAAF,CAAa;MACtBV,UAAU,CAACU,IAAI,CAACX,QAAN,CAAV;MACAF,UAAU,CAAC,IAAD,CAAV;IACD,CAXD,EAYCc,KAZD,CAYQC,GAAD,IAAS;MACdC,KAAK,CAACD,GAAD,CAAL;MACAN,QAAQ,CAAC,GAAD,CAAR;IACD,CAfD;EAgBD,CAlBH;EAqBA,oBAAO;IAAA,UACJV,OAAO,iBAAI,QAAC,kBAAD;MACV,QAAQ,EAAEG,QADA;MAEV,KAAK,EAAG;QAAEe,KAAK,EAAE,OAAT;QAAkBC,MAAM,EAAE;MAA1B,CAFE;MAGV,UAAU,EAAE,CACV;QACEC,QAAQ,EAAE,MADZ;QAEEC,KAAK,EAAE;UACLH,KAAK,EAAE,EADF;UAELC,MAAM,EAAE,EAFH;UAGLG,KAAK,EAAE,OAHF;UAILC,KAAK,EAAE;QAJF;MAFT,CADU,EAUV;QACEH,QAAQ,EAAE,MADZ;QAEEC,KAAK,EAAE;UACLH,KAAK,EAAE,CADF;UAELI,KAAK,EAAE;QAFF;MAFT,CAVU,CAHF;MAqBV,MAAM,EAAE;QACNE,IAAI,EAAC;MADC;IArBE;MAAA;MAAA;MAAA;IAAA;EADP,iBAAP;AA2BD,CAzDD;;GAAMzB,K;UAGOF,S,EACYA,S,EACFA,S,EACFA,S,EACFD,W;;;KAPbG,K;AA2DN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}