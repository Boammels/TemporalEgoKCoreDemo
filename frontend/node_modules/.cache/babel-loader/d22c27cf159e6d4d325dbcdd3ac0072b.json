{"ast":null,"code":"var _jsxFileName = \"/home/TemporalEgoKCoreDemo/frontend/src/pages/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [type, setType] = React.useState('name');\n  const [name, setName] = React.useState('');\n  const [id, setId] = React.useState('');\n  const [start, setStart] = React.useState(1938);\n  const [end, setEnd] = React.useState(2023);\n  const navigate = useNavigate();\n\n  const submit = () => {\n    let key = '';\n\n    if (type === 'name') {\n      key = name;\n    } else {\n      key = id;\n    }\n\n    if (key === '') {\n      alert('Alert: ' + type + ' cannot be empty!');\n    } else if (!isNumeric(start) || !isNumeric(end)) {\n      alert('Start or end is not a year');\n    } else if (parseInt(start) < 1938 || parseInt(end) > 2023) {\n      alert('year query out of bound');\n    } else if (parseInt(start) > parseInt(end)) {\n      alert('start year should earlier or equal to end year');\n    } else {\n      navigate('/' + type + '/' + key + '/' + start + '/' + end);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typeSelect\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"checkbox\",\n        checked: type === 'id',\n        style: {\n          display: 'inline'\n        },\n        onChange: () => {\n          if (type === 'name') {\n            setType('id');\n          } else {\n            setType('name');\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        children: \"Search by ID | \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"checkbox\",\n        checked: type === 'name',\n        style: {\n          display: 'inline'\n        },\n        onChange: () => {\n          if (type === 'name') {\n            setType('id');\n          } else {\n            setType('name');\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        children: \"Search by Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), type === 'name' && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      className: \"Input\",\n      placeholder: \"Name of the researcher\",\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }, this), type === 'id' && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: id,\n      className: \"Input\",\n      placeholder: \"ID of the researcher\",\n      onChange: e => setId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"yearInput\",\n      children: [\"From: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"year\",\n        value: start,\n        min: 1938,\n        max: 2023,\n        onChange: e => setStart(e.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this), \" To: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"year\",\n        value: end,\n        min: 1938,\n        max: 2023,\n        onChange: e => setEnd(e.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => submit(),\n      children: \"Let's Start!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"PFNGzKJkwBqtokvS2nTGSYkyiV4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useNavigate","Search","type","setType","useState","name","setName","id","setId","start","setStart","end","setEnd","navigate","submit","key","alert","isNumeric","parseInt","display","e","target","value"],"sources":["/home/TemporalEgoKCoreDemo/frontend/src/pages/Search.jsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\n\nconst Search = () => {\n  const [type, setType] = React.useState('name');\n  const [name, setName] = React.useState('');\n  const [id, setId] = React.useState('');\n  const [start, setStart] = React.useState(1938)\n  const [end, setEnd] = React.useState(2023)\n  const navigate = useNavigate()\n\n  const submit = () => {\n    let key = '';\n    if (type === 'name') {\n      key = name;\n    } else {\n      key = id;\n    }\n    if (key === '') {\n      alert('Alert: ' + type + ' cannot be empty!');\n    } else if (!isNumeric(start) || !isNumeric(end)) {\n      alert('Start or end is not a year')\n    } else if (parseInt(start) < 1938 || parseInt(end) > 2023) {\n      alert('year query out of bound')\n    } else if (parseInt(start) > parseInt(end)) {\n      alert('start year should earlier or equal to end year')\n    } else {\n      navigate('/'+type+'/'+key+'/'+start+'/'+end)\n    }\n\n  }\n\n  return (\n    <div className='main'>\n      <div className='typeSelect'> \n        <input\n          type='checkbox'\n          className='checkbox'\n          checked={type==='id'}\n          style={{ display:'inline' }}\n          onChange={() => {\n            if (type === 'name') {\n              setType('id');\n            } else {\n              setType('name')\n            }\n          }}\n        />\n        <span className='text'>Search by ID | </span>\n        <input\n          type='checkbox'\n          className='checkbox'\n          checked={type==='name'}\n          style={{ display:'inline' }}\n          onChange={() => {\n            if (type === 'name') {\n              setType('id');\n            } else {\n              setType('name')\n            }\n          }}\n        />\n        <span className='text'>Search by Name</span>\n      </div>\n      {type==='name' && <input\n        type='text'\n        value={name}\n        className='Input'\n        placeholder='Name of the researcher'\n        onChange={e => setName(e.target.value)}\n      />}\n      {type==='id' && <input\n        type='number'\n        value={id}\n        className='Input'\n        placeholder='ID of the researcher'\n        onChange={e => setId(e.target.value)}\n      />}\n      <div className='yearInput'>\n        From: <input\n          type='number'\n          className='year'\n          value={start}\n          min={1938}\n          max={2023}\n          onChange={e => setStart(e.value)}\n        /> To: <input\n          type='number'\n          className='year'\n          value={end}\n          min={1938}\n          max={2023}\n          onChange={e => setEnd(e.value)}\n        />\n      </div>\n      <button\n        onClick={() => submit()}\n      >Let's Start!</button>\n    </div>\n  )\n}\n\nexport default Search"],"mappings":"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"},"metadata":{},"sourceType":"module"}