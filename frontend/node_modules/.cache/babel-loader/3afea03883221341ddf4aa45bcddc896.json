{"ast":null,"code":"var _jsxFileName = \"/home/TemporalEgoKCoreDemo/frontend/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text\",\n        children: \"Welcome!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Start, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nconst Start = () => {\n  _s();\n\n  const [type, setType] = React.useState('name');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typeSelect\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"checkbox\",\n          checked: type === 'id',\n          style: {\n            display: 'inline'\n          },\n          onChange: () => {\n            if (type === 'name') {\n              setType('id');\n            } else {\n              setType('name');\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Search by ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"checkbox\",\n          checked: type === 'name',\n          style: {\n            display: 'inline'\n          },\n          onChange: () => {\n            if (type === 'name') {\n              setType('id');\n            } else {\n              setType('name');\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Search by Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), type === 'name' && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"Input\",\n        placeholder: \"Name of the researcher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 27\n      }, this), type === 'id' && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"Input\",\n        placeholder: \"ID of the researcher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/123\",\n        children: \"Let's Start!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Start, \"5DnqMnVLJuMvjkXu4NYh2HQr4fk=\");\n\n_c2 = Start;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Start\");","map":{"version":3,"names":["React","BrowserRouter","Routes","Route","App","Start","type","setType","useState","display"],"sources":["/home/TemporalEgoKCoreDemo/frontend/src/App.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <header className='header'>\n        <p className='text'>Welcome!</p>\n      </header>\n      <Routes>\n        <Route path=\"/\" element={<Start />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nconst Start = () => {\n  const [type, setType] = React.useState('name');\n\n  return (\n    <div className='App'>\n      <div className='main'>\n        <div className='typeSelect'> \n          <input\n            type='checkbox'\n            className='checkbox'\n            checked={type==='id'}\n            style={{ display:'inline' }}\n            onChange={() => {\n              if (type === 'name') {\n                setType('id');\n              } else {\n                setType('name')\n              }\n            }}\n          />\n          <span>Search by ID</span>\n          <input\n            type='checkbox'\n            className='checkbox'\n            checked={type==='name'}\n            style={{ display:'inline' }}\n            onChange={() => {\n              if (type === 'name') {\n                setType('id');\n              } else {\n                setType('name')\n              }\n            }}\n          />\n          <span>Search by Name</span>\n        </div>\n        {type==='name' && <input type='text' className='Input' placeholder='Name of the researcher' />}\n        {type==='id' && <input type='text' className='Input' placeholder='ID of the researcher' />}\n        <a href='/123'>Let's Start!</a>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;AAKA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EACb,oBACE,QAAC,aAAD;IAAA,wBACE;MAAQ,SAAS,EAAC,QAAlB;MAAA,uBACE;QAAG,SAAS,EAAC,MAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,MAAD;MAAA,uBACE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA;MAAzB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;KAXQA,G;;AAaT,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACQ,QAAN,CAAe,MAAf,CAAxB;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QAAK,SAAS,EAAC,YAAf;QAAA,wBACE;UACE,IAAI,EAAC,UADP;UAEE,SAAS,EAAC,UAFZ;UAGE,OAAO,EAAEF,IAAI,KAAG,IAHlB;UAIE,KAAK,EAAE;YAAEG,OAAO,EAAC;UAAV,CAJT;UAKE,QAAQ,EAAE,MAAM;YACd,IAAIH,IAAI,KAAK,MAAb,EAAqB;cACnBC,OAAO,CAAC,IAAD,CAAP;YACD,CAFD,MAEO;cACLA,OAAO,CAAC,MAAD,CAAP;YACD;UACF;QAXH;UAAA;UAAA;UAAA;QAAA,QADF,eAcE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAdF,eAeE;UACE,IAAI,EAAC,UADP;UAEE,SAAS,EAAC,UAFZ;UAGE,OAAO,EAAED,IAAI,KAAG,MAHlB;UAIE,KAAK,EAAE;YAAEG,OAAO,EAAC;UAAV,CAJT;UAKE,QAAQ,EAAE,MAAM;YACd,IAAIH,IAAI,KAAK,MAAb,EAAqB;cACnBC,OAAO,CAAC,IAAD,CAAP;YACD,CAFD,MAEO;cACLA,OAAO,CAAC,MAAD,CAAP;YACD;UACF;QAXH;UAAA;UAAA;UAAA;QAAA,QAfF,eA4BE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QA5BF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EA+BGD,IAAI,KAAG,MAAP,iBAAiB;QAAO,IAAI,EAAC,MAAZ;QAAmB,SAAS,EAAC,OAA7B;QAAqC,WAAW,EAAC;MAAjD;QAAA;QAAA;QAAA;MAAA,QA/BpB,EAgCGA,IAAI,KAAG,IAAP,iBAAe;QAAO,IAAI,EAAC,MAAZ;QAAmB,SAAS,EAAC,OAA7B;QAAqC,WAAW,EAAC;MAAjD;QAAA;QAAA;QAAA;MAAA,QAhClB,eAiCE;QAAG,IAAI,EAAC,MAAR;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjCF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAuCD,CA1CD;;GAAMD,K;;MAAAA,K;AA4CN,eAAeD,GAAf"},"metadata":{},"sourceType":"module"}