{"ast":null,"code":"var _jsxFileName = \"/home/TemporalEgoKCoreDemo/frontend/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport Graph from './pages/Graph';\nimport Search from './pages/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text\",\n        children: \"Welcome!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"echo\",\n        element: /*#__PURE__*/_jsxDEV(Echo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/id/:id/:start/:end\",\n        element: /*#__PURE__*/_jsxDEV(Graph, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nconst Echo = () => {\n  _s();\n\n  const [string, setString] = React.useState('');\n  const [success, setSuccess] = React.useState(false);\n  React.useState(async () => {\n    const response = await fetch('http://127.0.0.1:5000/echo/post/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const result = await response.json();\n\n    if (response.status === 200) {\n      setString(result.echo);\n      setSuccess(true);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: string\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Echo, \"K+81kUxYXjdr5oTegjnjhtpDPFQ=\");\n\n_c2 = Echo;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Echo\");","map":{"version":3,"names":["React","BrowserRouter","Routes","Route","Graph","Search","App","Echo","string","setString","useState","success","setSuccess","response","fetch","method","headers","result","json","status","echo"],"sources":["/home/TemporalEgoKCoreDemo/frontend/src/App.jsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport Graph from './pages/Graph' \r\nimport Search from './pages/Search'\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <header className='header'>\r\n        <p className='text'>Welcome!</p>\r\n      </header>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Search />} />\r\n        <Route path=\"echo\" element={<Echo />} />\r\n        <Route path=\"/id/:id/:start/:end\" element={<Graph />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nconst Echo = () => {\r\n  const [string, setString] = React.useState('')\r\n  const [success, setSuccess] = React.useState(false);\r\n  React.useState(\r\n    async () => {\r\n      const response = await fetch('http://127.0.0.1:5000/echo/post/', {\r\n        method: 'GET',\r\n        headers : { \r\n          'Content-Type': 'application/json',\r\n        }\r\n      });\r\n      const result = await response.json();\r\n      if(response.status === 200) {\r\n        setString(result.echo);\r\n        setSuccess(true);\r\n      }\r\n    }\r\n  )\r\n  return (\r\n    <>\r\n    {success && <h1>{string}</h1>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;AAKA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;;;AAEA,SAASC,GAAT,GAAe;EACb,oBACE,QAAC,aAAD;IAAA,wBACE;MAAQ,SAAS,EAAC,QAAlB;MAAA,uBACE;QAAG,SAAS,EAAC,MAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA;MAAzB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,MAAZ;QAAmB,OAAO,eAAE,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA;MAA5B;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,KAAD;QAAO,IAAI,EAAC,qBAAZ;QAAkC,OAAO,eAAE,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA;MAA3C;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;KAbQA,G;;AAeT,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,KAAK,CAACU,QAAN,CAAe,EAAf,CAA5B;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,KAAK,CAACU,QAAN,CAAe,KAAf,CAA9B;EACAV,KAAK,CAACU,QAAN,CACE,YAAY;IACV,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqC;MAC/DC,MAAM,EAAE,KADuD;MAE/DC,OAAO,EAAG;QACR,gBAAgB;MADR;IAFqD,CAArC,CAA5B;IAMA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAArB;;IACA,IAAGL,QAAQ,CAACM,MAAT,KAAoB,GAAvB,EAA4B;MAC1BV,SAAS,CAACQ,MAAM,CAACG,IAAR,CAAT;MACAR,UAAU,CAAC,IAAD,CAAV;IACD;EACF,CAbH;EAeA,oBACE;IAAA,UACCD,OAAO,iBAAI;MAAA,UAAKH;IAAL;MAAA;MAAA;MAAA;IAAA;EADZ,iBADF;AAKD,CAvBD;;GAAMD,I;;MAAAA,I;AAyBN,eAAeD,GAAf"},"metadata":{},"sourceType":"module"}